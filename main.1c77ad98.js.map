{"version":3,"sources":["scripts/main.js"],"names":["phonesUrl","detailsUrl","getPhonesId","fetch","then","response","json","getPhoneDetail","id","getFirstReceivedDetails","arr","Promise","race","res","document","body","insertAdjacentHTML","name","getAllSuccessfulDetails","all","querySelector","innerHTML","map","item","join","getThreeFastestDetails","phoneArr","i","push","phoneList","phonesId","phone"],"mappings":";AAAA,aAqDA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnDA,IAAMA,EAAN,4EAEMC,EAAN,wEAGMC,EAAc,WACXC,OAAAA,MAAMH,GAAWI,KAAK,SAAAC,GAAYA,OAAAA,EAASC,UAG9CC,EAAiB,SAACC,GACfL,OAAAA,MAAM,GAAGF,OAAAA,GAAkBO,GAAAA,OAAAA,EAAtB,UACTJ,KAAK,SAAAC,GAAYA,OAAAA,EAASC,UAGzBG,EAA0B,SAACC,GAC/BC,QAAQC,KAASF,EAAAA,IACdN,KAAK,SAAAS,GACJC,SAASC,KAAKC,mBAAmB,aAGzBH,oFAAAA,OAAAA,EAAII,KAHZ,6BAQAC,EAA0B,SAACR,GAC/BC,QAAQQ,IAAQT,EAAAA,IACbN,KAAK,SAAAS,GACJC,SAASC,KAAKC,mBAAmB,aAAjC,sGAMWF,SAASM,cAAc,MAE/BC,UAAYR,EAAIS,IAAI,SAAAC,GAAeA,MAAAA,OAAAA,OAAAA,EAAKN,KAAhB,WAA6BO,KAAK,OAI7DC,EAAyB,SAACf,GACxBgB,IAAAA,EAAW,GAEjBf,QAAQQ,IAAQT,EAAAA,IACbN,KAAK,SAAAS,GACC,IAAA,IAAIc,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAASE,KAAKf,EAAIc,OAK1BzB,IAAcE,KAAK,SAAAyB,GACXC,IAAAA,EAAWD,EAAUP,IAAI,SAAAS,GAASxB,OAAAA,EAAewB,EAAMvB,MAE7DC,EAAwBqB,GACxBZ,EAAwBY,GACxBL,EAAuBK","file":"main.1c77ad98.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst phonesUrl = `\n  https://mate-academy.github.io/phone-catalogue-static/api/phones.json`;\nconst detailsUrl = `\n  https://mate-academy.github.io/phone-catalogue-static/api/phones/`;\n\nconst getPhonesId = () => {\n  return fetch(phonesUrl).then(response => response.json());\n};\n\nconst getPhoneDetail = (id) => {\n  return fetch(`${detailsUrl}` + `${id}.json`)\n    .then(response => response.json());\n};\n\nconst getFirstReceivedDetails = (arr) => {\n  Promise.race([...arr])\n    .then(res => {\n      document.body.insertAdjacentHTML('afterbegin', `\n      <div class=\"first-received\">\n      <h2>First Received</h2>\n      <span>${res.name}</span>\n      </div>`);\n    });\n};\n\nconst getAllSuccessfulDetails = (arr) => {\n  Promise.all([...arr])\n    .then(res => {\n      document.body.insertAdjacentHTML('afterbegin', `\n      <div class=\"all-successful\">\n      <h2>All Successful</h2>\n      <ul></ul>\n      </div>`);\n\n      const ul = document.querySelector('ul');\n\n      ul.innerHTML = res.map(item => `<li>${item.name}</li>`).join('');\n    });\n};\n\nconst getThreeFastestDetails = (arr) => {\n  const phoneArr = [];\n\n  Promise.all([...arr])\n    .then(res => {\n      for (let i = 0; i < 3; i++) {\n        phoneArr.push(res[i]);\n      }\n    });\n};\n\ngetPhonesId().then(phoneList => {\n  const phonesId = phoneList.map(phone => getPhoneDetail(phone.id));\n\n  getFirstReceivedDetails(phonesId);\n  getAllSuccessfulDetails(phonesId);\n  getThreeFastestDetails(phonesId);\n});\n"]}